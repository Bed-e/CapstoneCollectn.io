const Item = require("../models/item");

const fetchItems = async (req, res) => {
  try {
    const items = await Item.find();
    res.json({ items });
  } catch (error) {
    console.error("Error fetching items:", error);
    res.status(500).json({ error: "Failed to fetch items" });
  }
};

const fetchItem = async (req, res) => {
  try {
    const itemId = req.params.id;
    const item = await Item.findById(itemId);
    if (!item) {
      return res.status(404).json({ error: "Item not found" });
    }
    res.json({ item });
  } catch (error) {
    console.error("Error fetching item:", error);
    res.status(500).json({ error: "Failed to fetch item" });
  }
};

const createItem = async (req, res) => {
  try {
    const { itemName, description, character, image, dateCreated } = req.body;
    const item = await Item.create({
      itemName,
      description,
      character,
      image,
      dateCreated,
    });
    res.json({ item });
  } catch (error) {
    if (error.code === "LIMIT_FILE_SIZE") {
      console.error("File too large:", error);
      res.status(413).json({ error: "File too large" });
    } else {
      console.error("Error creating item:", error);
      res.status(500).json({ error: "Failed to create item" });
    }
  }
};

const updateItem = async (req, res) => {
  try {
    const itemId = req.params.id;
    const { itemName, description, character, image, dateCreated } = req.body;
    const item = await Item.findByIdAndUpdate(
      itemId,
      {
        itemName,
        description,
        character,
        image,
        dateCreated,
      },
      { new: true } // return the updated document
    );
    if (!item) {
      return res.status(404).json({ error: "Item not found" });
    }
    res.json({ item });
  } catch (error) {
    if (error.code === "LIMIT_FILE_SIZE") {
      console.error("File too large:", error);
      res.status(413).json({ error: "File too large" });
    } else {
      console.error("Error updating item:", error);
      res.status(500).json({ error: "Failed to update item" });
    }
  }
};

const deleteItem = async (req, res) => {
  try {
    const itemId = req.params.id;
    const item = await Item.findByIdAndDelete(itemId);
    if (!item) {
      return res.status(404).json({ error: "Item not found" });
    }
    res.json({ success: "Record deleted" });
  } catch (error) {
    console.error("Error deleting item:", error);
    res.status(500).json({ error: "Failed to delete item" });
  }
};

module.exports = {
  fetchItems,
  fetchItem,
  createItem,
  deleteItem,
  updateItem,
};
